/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./question.js":
/*!*********************!*\
  !*** ./question.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _question_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./question/index */ \"./question/index.js\");\n/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scss/main.scss */ \"../scss/main.scss\");\n\n\n/*global LearnosityAmd*/\n\nLearnosityAmd.define([], function () {\n  return {\n    Question: _question_index__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9xdWVzdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBRUE7O0FBQ0FDLGFBQWEsQ0FBQ0MsTUFBZCxDQUFxQixFQUFyQixFQUF5QixZQUFZO0FBQ2pDLFNBQU87QUFDSEYsSUFBQUEsUUFBUSxFQUFSQSx1REFBUUE7QUFETCxHQUFQO0FBR0gsQ0FKRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3F1ZXN0aW9uLmpzP2Q4YzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFF1ZXN0aW9uIGZyb20gJy4vcXVlc3Rpb24vaW5kZXgnO1xuaW1wb3J0ICcuLi9zY3NzL21haW4uc2Nzcyc7XG5cbi8qZ2xvYmFsIExlYXJub3NpdHlBbWQqL1xuTGVhcm5vc2l0eUFtZC5kZWZpbmUoW10sIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBRdWVzdGlvblxuICAgIH07XG59KTtcbiJdLCJuYW1lcyI6WyJRdWVzdGlvbiIsIkxlYXJub3NpdHlBbWQiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./question.js\n");

/***/ }),

/***/ "./question/constants.js":
/*!*******************************!*\
  !*** ./question/constants.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PREFIX\": () => (/* binding */ PREFIX)\n/* harmony export */ });\n/**\n * When creating a Learnosity Custom Question, itâ€™s important to prefix the CSS class names being used inside\n * your custom Question UI.\n * You should avoid using a generic class name like `.btn`.\n * Instead, you should add a prefix to it like `.company-name-my-custom-question-btn`\n * to avoid CSS conflict with the host page and the CSS used by the Learnosity API.\n */\nvar PREFIX = 'lrn-custom-question';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9xdWVzdGlvbi9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sSUFBTUEsTUFBTSxHQUFHLHFCQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcXVlc3Rpb24vY29uc3RhbnRzLmpzP2M5YjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXaGVuIGNyZWF0aW5nIGEgTGVhcm5vc2l0eSBDdXN0b20gUXVlc3Rpb24sIGl04oCZcyBpbXBvcnRhbnQgdG8gcHJlZml4IHRoZSBDU1MgY2xhc3MgbmFtZXMgYmVpbmcgdXNlZCBpbnNpZGVcbiAqIHlvdXIgY3VzdG9tIFF1ZXN0aW9uIFVJLlxuICogWW91IHNob3VsZCBhdm9pZCB1c2luZyBhIGdlbmVyaWMgY2xhc3MgbmFtZSBsaWtlIGAuYnRuYC5cbiAqIEluc3RlYWQsIHlvdSBzaG91bGQgYWRkIGEgcHJlZml4IHRvIGl0IGxpa2UgYC5jb21wYW55LW5hbWUtbXktY3VzdG9tLXF1ZXN0aW9uLWJ0bmBcbiAqIHRvIGF2b2lkIENTUyBjb25mbGljdCB3aXRoIHRoZSBob3N0IHBhZ2UgYW5kIHRoZSBDU1MgdXNlZCBieSB0aGUgTGVhcm5vc2l0eSBBUEkuXG4gKi9cbmV4cG9ydCBjb25zdCBQUkVGSVggPSAnbHJuLWN1c3RvbS1xdWVzdGlvbic7XG4iXSwibmFtZXMiOlsiUFJFRklYIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./question/constants.js\n");

/***/ }),

/***/ "./question/index.js":
/*!***************************!*\
  !*** ./question/index.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Question)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./question/constants.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Question = /*#__PURE__*/function () {\n  function Question(init, lrnUtils) {\n    var _this = this;\n\n    _classCallCheck(this, Question);\n\n    this.init = init;\n    this.events = init.events;\n    this.lrnUtils = lrnUtils;\n    this.el = init.$el.get(0);\n    this.render().then(function () {\n      _this.registerPublicMethods();\n\n      _this.handleEvents();\n      /**\n       * @param { String } init.state - the state of Questions API.\n       * state can be any of the following 3 strings\n       * \"initial\" for first starting the assessment,\n       * \"resume\" for coming back to a previously started assessment,\n       * \"review\" for showing the completed assessment and results to the learner or teacher\n       */\n\n\n      if (init.state === 'resume') {\n        /**\n         * If you want your custom question to support resume state\n         * (For a learner to be able to come back to your question in a future sitting after having previously started and saved the assessment),\n         * then make make sure to update your question's UI to display the previously saved response Questions API has stored in the back end.\n         */\n        // EXAMPLE implementation:\n        // if(init.response) {\n        //     // This example assumes a simple DOM input for the custom question's UI, and updates its value to the value of the saved response upon resume. \n        //     document.getElementById('my-input').value = init.response.value;\n        // }\n      }\n\n      if (init.state === 'review') {\n        /**\n        * If you want your custom question to support review state\n        * (For a learner or instructor to be able to view their results in a read-only mode after having completed and submitted the assessment),\n        * then make make sure to update your question's UI to display the previously submitted response Questions API has stored in the back end.\n        * NOTE: this is required if you intend to use Reports API with your custom question (for example the session-detail-by-item report).\n        */\n        // EXAMPLE implementation:\n        // if(init.response) {\n        //     // This example assumes a simple DOM input for the custom questions UI, and updates its value to the value of the submitted response upon review. \n        //     document.getElementById('my-input').value = init.response.value;\n        // }\n\n        /**\n         * below, we call the disable public method on the custom question to display it in a read-only mode\n         * to learners and/or instructors viewing the completed results.\n         * (Please see this.registerPublicMethods below for more detials about the .disable() method, including an example implementation)\n         */\n        init.getFacade().disable();\n      }\n\n      init.events.trigger('ready');\n    });\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var el = this.el,\n          init = this.init,\n          lrnUtils = this.lrnUtils;\n      var question = init.question,\n          response = init.response; // TODO: Requires implementation\n\n      el.innerHTML = \"\\n            <div class=\\\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_0__.PREFIX, \" lrn-response-validation-wrapper\\\">\\n                <div class=\\\"lrn_response_input\\\">\\n                    Requires implementation - YOUR CONTENT GOES IN HERE\\n                    This element is the hook into which your custom question's UI should be rendered.\\n                </div>            \\n                <div class=\\\"\").concat(_constants__WEBPACK_IMPORTED_MODULE_0__.PREFIX, \"-checkAnswer-wrapper\\\"></div>\\n                <div class=\\\"\").concat(_constants__WEBPACK_IMPORTED_MODULE_0__.PREFIX, \"-suggestedAnswers-wrapper\\\"></div>\\n            </div>\\n        \"); // Optional - Render optional Learnosity components like Check Answer Button, Suggested Answers List\n      // first before rendering your question's components\n\n      return Promise.all([lrnUtils.renderComponent('SuggestedAnswersList', el.querySelector(\".\".concat(_constants__WEBPACK_IMPORTED_MODULE_0__.PREFIX, \"-suggestedAnswers-wrapper\"))), lrnUtils.renderComponent('CheckAnswerButton', el.querySelector(\".\".concat(_constants__WEBPACK_IMPORTED_MODULE_0__.PREFIX, \"-checkAnswer-wrapper\")))]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            suggestedAnswersList = _ref2[0];\n\n        _this2.suggestedAnswersList = suggestedAnswersList; // TODO - Requires implementation\n\n        /**  The logic to render the UI of your custom question should go here. \n         * \n         * For example this might be a call to a function or instantiation of a class to render your UI component(s).\n         * \n         */\n      });\n    }\n    /**\n     * Add public methods to the created question instance that is accessible during runtime\n     *\n     * Example: questionsApp.question('my-custom-question-response-id').myNewMethod();\n     * \n     */\n\n  }, {\n    key: \"registerPublicMethods\",\n    value: function registerPublicMethods() {\n      var init = this.init; // Attach the methods you want on this object\n\n      var facade = init.getFacade();\n\n      facade.disable = function () {// TODO: Requires implementation\n\n        /**\n         * The purpose of this method is to prevent learner interaction with your question's UI.\n         * \n         * If you plan to display your custom question in \"review\" state, then you need to implement this\n         * method to prevent a learner or instructor who is reviewing their completed results from being able to change the responses in your question UI.\n         */\n        // EXAMPLE implementation\n        // document.getElementById('my-input').setAttribute('disabled', true)\n      };\n\n      facade.enable = function () {\n        /**\n         * The purpose of this method is to re-enable learner interaction with your question's UI\n         * after it has been previously disabled.\n         *               \n         * (For example, you plan to temporarily disable the question UI for a student taking the assessment until they complete another task like spend a set time reading the instructions.)\n         */\n        // EXAMPLE implementation\n        // document.getElementById('my-input').removeAttribute('disabled')\n      };\n\n      facade.resetResponse = function () {\n        /**\n         * The purpose of this method is to support removal of a previously entered response to your custom question\n         * and restoring the question to its initial blank state before a response was entered.\n         * (For example, in a multiple choice question where a student has picked a choice, you reset the question so that no choices are picked at all.)\n         */\n        // TODO: Requires implementation, you could use the following steps\n        // trigger a 'resetResponse' event to reset the value of response\n        // this.events.trigger('resetResponse');\n        // reset other states if you need\n        // re-render the component, manage the 'reset' state by yourself\n      };\n\n      facade.showValidationUI = function () {// TODO: requires implementation\n\n        /**\n         * The purpose of this method is to update your custom question's UI with visual feedback \n         * after the learner presses the Check Answer button.\n         * \n         * The following is an example implementation that shows the standard Learnosity \"checkmark / tick\" for a correct answer\n         * or the standard Learnosity \"x mark / cross\" for an incorrect answer. \n         */\n        // EXAMPLE implemetation:\n        // const answerIsCorrect = facade.isValid();\n        // /**\n        //  * update the UI based on the result\n        //  * IMPORTANT: In both cases we need to target the element with the classname lrn_response_input\n        //  */\n        // if (answerIsCorrect) {\n        //     /** if the answer is correct we will add the Learnosity utility class lrn_correct, which will automatically show the Learnosity\n        //      * checkmark (tick) you are used to on regular Learnosity quesiton types\n        //      */\n        //     el.querySelector(\".lrn_response_input\").classList.add(\"lrn_correct\");\n        // } else {\n        //     /** if the answer is incorrect we will add the Learnosity utility class lrn_incorrect, which will automatically show the Learnosity\n        //      * x (cross) you are used to on regular Learnosity quesiton types\n        //      */\n        //     el.querySelector(\".lrn_response_input\").classList.add(\"lrn_incorrect\");\n        // }\n      };\n\n      facade.resetValidationUI = function () {// TODO: requires implementation\n\n        /**\n         * If you implement showValidationUI() above, then you need to implement this method also.\n         * \n         * If the user enters a response to your custom question, presses the Check Answer button, and then changes their response to something new,\n         * you now need to remove the feedback UI that you had displayed for the previous response. This is exactly the purpose of this method.\n         * \n         * The following is an example implementation that removes the standard Learnosity validation UI (\"checkmark / tick\" if the previous response was correct\n         * or \"x mark / cross\" if the previous response was incorrect).\n         */\n        // Example implementation:\n        // // we will remove the Learnosity checkmark or x previously showing\n        // el.querySelector(\".lrn_response_input\").classList.remove(\"lrn_correct\");\n        // el.querySelector(\".lrn_response_input\").classList.remove(\"lrn_incorrect\");\n        // // if we chose to also display the correct answer, we will now remove the display of the correct answer as well by \n        // // leveraging the suggestedAnswersList.reset() method.\n        // this.suggestedAnswersList.reset()\n      };\n    }\n  }, {\n    key: \"handleEvents\",\n    value: function handleEvents() {\n      var events = this.events,\n          init = this.init;\n      var facade = init.getFacade(); // TODO: Requires implementation - Make sure you trigger 'changed' event after the user changes their responses to your custom quesiton:\n\n      /**\n       * \n       * When you consider that the response to your question has been changed, \n       * (such when a user clicks the choice of a multiple choice question or enters text into a free response question),\n       * then you must trigger the changed event to inform Questions API that the question has been attempted.\n       * \n       * To do this, you must call events.trigger('changed', responses);  \n       * This call should take place inside of a DOM event listener in which the user has changed their response to your question\n       * (such as a 'click' event listener for a multiple choice question, or an input 'change' event listener for a free response text question)\n       * \n       * @param responses The 'responses' variable can be any data type you would like it to be depending on the format of your custom question's responses. \n       * For instance, it might be a string for the value of a simple text input\n       * Or for a quesiton asking a student to plot coorinates on a graph, it might be an object containing the x and y coordinates, e.g.\n       *     {\n       *       x: 123,\n       *       y: 408\n       *     }\n       */\n\n      /** EXAMPLE implementation\n       * \n       * document.getElementById('my-radio-button').addEventListener('click', (event) => {\n       *   \n       *  // STEP 1: when the user clicks on your custom question's input, save its current value as the value of responses\n       *  let responses = event.target.value\n       *   \n       *  // STEP 2: \n       *  // now notfy Questions API that the user has changed their response\n       *   \n       *   events.trigger('changed', responses);\n       * \n       *  // STEP 3 - OPTIONAL\n       *  // If you have chosen to implement facade.showValidationUI() above to display visiual feedback for a correct / incorrect answer\n       *     when the user presses \"Check Answer\" for the current response:\n       *     then make sure you have also implemented facade.resetValidationUI(), and that you call it here:\n       * \n       * // facade.resetValidationUI()\n       * \n       * })\n       * \n       */\n      // \"validate\" event can be triggered when Check Answer button is clicked or when public method .validate() is called\n      // so developer needs to listen to this event to decide if he wants to display the correct answers to user or not\n      // options.showCorrectAnswers will tell if correct answers for this question should be display or not.\n      // The value showCorrectAnswers by default is the value of showCorrectAnswers inside initOptions object that is used\n      // to initialize question app or the value of the options that is passed into public method validate (like question.validate({showCorrectAnswers: false}))\n\n      events.on('validate', function (options) {\n        // OPTIONAL Step 1: \n        //If you want to show changes to the UI for a correct or incorrect answer when the learner presses check answer\n        // then make sure you have also implemented facade.showValidationUI(), and that you call it here:\n        facade.showValidationUI(); // OPTIONAL Step 2: \n        // If you want to display the correct answer to the learner when they press the Check Answer button,\n        // then you should leverage the suggestedAnswersList.setAnswers() method. Please see the example implementation below for full details.\n        // EXAMPLE Implementation \n        // if (!facade.isValid() && options.showCorrectAnswers) {\n        //     // pass a string if there is a single correct answer \n        //     //OR:\n        //     /**\n        //     * For custom questions with multiple correct answers, you can also pass an array of objects into this method, \n        //     * each object containing an index key of type number for the 0-based index of the correct answer, \n        //     * and a label key of type string for the text of the correct answer. \n        //     * So, for a hypothetical question with 3 correct answers, you might pass the following array into setAnswers():\n        //         [\n        //          {index: 0, label: \"correct answer 1\"},\n        //          {index: 1, label: \"correct answer 2\"},\n        //          {index: 2, label: \"correct answer 3\"}\n        //         ]\n        //      */\n        //     // EXAMPLE Implementation for a correct answer that is a string:\n        //     // this.suggestedAnswersList.setAnswers(this.question.valid_response);\n        // }\n      });\n    }\n  }]);\n\n  return Question;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0FKNkIsQ0FNN0I7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBRUgsT0FsQ0Q7QUFtQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9xdWVzdGlvbi9pbmRleC5qcz9iNWYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBSRUZJWCB9IGZyb20gJy4vY29uc3RhbnRzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUXVlc3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKGluaXQsIGxyblV0aWxzKSB7XG4gICAgICAgIHRoaXMuaW5pdCA9IGluaXQ7XG4gICAgICAgIHRoaXMuZXZlbnRzID0gaW5pdC5ldmVudHM7XG4gICAgICAgIHRoaXMubHJuVXRpbHMgPSBscm5VdGlscztcbiAgICAgICAgdGhpcy5lbCA9IGluaXQuJGVsLmdldCgwKTtcblxuICAgICAgICB0aGlzLnJlbmRlcigpLnRoZW4oKCkgPT57XG4gICAgICAgICAgICB0aGlzLnJlZ2lzdGVyUHVibGljTWV0aG9kcygpO1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVFdmVudHMoKTtcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBpbml0LnN0YXRlIC0gdGhlIHN0YXRlIG9mIFF1ZXN0aW9ucyBBUEkuXG4gICAgICAgICAgICAgKiBzdGF0ZSBjYW4gYmUgYW55IG9mIHRoZSBmb2xsb3dpbmcgMyBzdHJpbmdzXG4gICAgICAgICAgICAgKiBcImluaXRpYWxcIiBmb3IgZmlyc3Qgc3RhcnRpbmcgdGhlIGFzc2Vzc21lbnQsXG4gICAgICAgICAgICAgKiBcInJlc3VtZVwiIGZvciBjb21pbmcgYmFjayB0byBhIHByZXZpb3VzbHkgc3RhcnRlZCBhc3Nlc3NtZW50LFxuICAgICAgICAgICAgICogXCJyZXZpZXdcIiBmb3Igc2hvd2luZyB0aGUgY29tcGxldGVkIGFzc2Vzc21lbnQgYW5kIHJlc3VsdHMgdG8gdGhlIGxlYXJuZXIgb3IgdGVhY2hlclxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgaWYgKGluaXQuc3RhdGUgPT09ICdyZXN1bWUnKSB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogSWYgeW91IHdhbnQgeW91ciBjdXN0b20gcXVlc3Rpb24gdG8gc3VwcG9ydCByZXN1bWUgc3RhdGVcbiAgICAgICAgICAgICAgICAgKiAoRm9yIGEgbGVhcm5lciB0byBiZSBhYmxlIHRvIGNvbWUgYmFjayB0byB5b3VyIHF1ZXN0aW9uIGluIGEgZnV0dXJlIHNpdHRpbmcgYWZ0ZXIgaGF2aW5nIHByZXZpb3VzbHkgc3RhcnRlZCBhbmQgc2F2ZWQgdGhlIGFzc2Vzc21lbnQpLFxuICAgICAgICAgICAgICAgICAqIHRoZW4gbWFrZSBtYWtlIHN1cmUgdG8gdXBkYXRlIHlvdXIgcXVlc3Rpb24ncyBVSSB0byBkaXNwbGF5IHRoZSBwcmV2aW91c2x5IHNhdmVkIHJlc3BvbnNlIFF1ZXN0aW9ucyBBUEkgaGFzIHN0b3JlZCBpbiB0aGUgYmFjayBlbmQuXG4gICAgICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgICAgICAvLyBFWEFNUExFIGltcGxlbWVudGF0aW9uOlxuICAgICAgICAgICAgICAgIC8vIGlmKGluaXQucmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgLy8gVGhpcyBleGFtcGxlIGFzc3VtZXMgYSBzaW1wbGUgRE9NIGlucHV0IGZvciB0aGUgY3VzdG9tIHF1ZXN0aW9uJ3MgVUksIGFuZCB1cGRhdGVzIGl0cyB2YWx1ZSB0byB0aGUgdmFsdWUgb2YgdGhlIHNhdmVkIHJlc3BvbnNlIHVwb24gcmVzdW1lLiBcbiAgICAgICAgICAgICAgICAvLyAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LWlucHV0JykudmFsdWUgPSBpbml0LnJlc3BvbnNlLnZhbHVlO1xuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGluaXQuc3RhdGUgPT09ICdyZXZpZXcnKSB7XG4gICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogSWYgeW91IHdhbnQgeW91ciBjdXN0b20gcXVlc3Rpb24gdG8gc3VwcG9ydCByZXZpZXcgc3RhdGVcbiAgICAgICAgICAgICAgICAgKiAoRm9yIGEgbGVhcm5lciBvciBpbnN0cnVjdG9yIHRvIGJlIGFibGUgdG8gdmlldyB0aGVpciByZXN1bHRzIGluIGEgcmVhZC1vbmx5IG1vZGUgYWZ0ZXIgaGF2aW5nIGNvbXBsZXRlZCBhbmQgc3VibWl0dGVkIHRoZSBhc3Nlc3NtZW50KSxcbiAgICAgICAgICAgICAgICAgKiB0aGVuIG1ha2UgbWFrZSBzdXJlIHRvIHVwZGF0ZSB5b3VyIHF1ZXN0aW9uJ3MgVUkgdG8gZGlzcGxheSB0aGUgcHJldmlvdXNseSBzdWJtaXR0ZWQgcmVzcG9uc2UgUXVlc3Rpb25zIEFQSSBoYXMgc3RvcmVkIGluIHRoZSBiYWNrIGVuZC5cbiAgICAgICAgICAgICAgICAgKiBOT1RFOiB0aGlzIGlzIHJlcXVpcmVkIGlmIHlvdSBpbnRlbmQgdG8gdXNlIFJlcG9ydHMgQVBJIHdpdGggeW91ciBjdXN0b20gcXVlc3Rpb24gKGZvciBleGFtcGxlIHRoZSBzZXNzaW9uLWRldGFpbC1ieS1pdGVtIHJlcG9ydCkuXG4gICAgICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgICAgICAvLyBFWEFNUExFIGltcGxlbWVudGF0aW9uOlxuICAgICAgICAgICAgICAgIC8vIGlmKGluaXQucmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgLy8gVGhpcyBleGFtcGxlIGFzc3VtZXMgYSBzaW1wbGUgRE9NIGlucHV0IGZvciB0aGUgY3VzdG9tIHF1ZXN0aW9ucyBVSSwgYW5kIHVwZGF0ZXMgaXRzIHZhbHVlIHRvIHRoZSB2YWx1ZSBvZiB0aGUgc3VibWl0dGVkIHJlc3BvbnNlIHVwb24gcmV2aWV3LiBcbiAgICAgICAgICAgICAgICAvLyAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LWlucHV0JykudmFsdWUgPSBpbml0LnJlc3BvbnNlLnZhbHVlO1xuICAgICAgICAgICAgICAgIC8vIH1cblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIGJlbG93LCB3ZSBjYWxsIHRoZSBkaXNhYmxlIHB1YmxpYyBtZXRob2Qgb24gdGhlIGN1c3RvbSBxdWVzdGlvbiB0byBkaXNwbGF5IGl0IGluIGEgcmVhZC1vbmx5IG1vZGVcbiAgICAgICAgICAgICAgICAgKiB0byBsZWFybmVycyBhbmQvb3IgaW5zdHJ1Y3RvcnMgdmlld2luZyB0aGUgY29tcGxldGVkIHJlc3VsdHMuXG4gICAgICAgICAgICAgICAgICogKFBsZWFzZSBzZWUgdGhpcy5yZWdpc3RlclB1YmxpY01ldGhvZHMgYmVsb3cgZm9yIG1vcmUgZGV0aWFscyBhYm91dCB0aGUgLmRpc2FibGUoKSBtZXRob2QsIGluY2x1ZGluZyBhbiBleGFtcGxlIGltcGxlbWVudGF0aW9uKVxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIGluaXQuZ2V0RmFjYWRlKCkuZGlzYWJsZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgaW5pdC5ldmVudHMudHJpZ2dlcigncmVhZHknKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGVsLCBpbml0LCBscm5VdGlscyB9ID0gdGhpcztcbiAgICAgICAgY29uc3QgeyBxdWVzdGlvbiwgcmVzcG9uc2UgfSA9IGluaXQ7XG5cbiAgICAgICAgLy8gVE9ETzogUmVxdWlyZXMgaW1wbGVtZW50YXRpb25cbiAgICAgICAgZWwuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIiR7UFJFRklYfSBscm4tcmVzcG9uc2UtdmFsaWRhdGlvbi13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxybl9yZXNwb25zZV9pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICBSZXF1aXJlcyBpbXBsZW1lbnRhdGlvbiAtIFlPVVIgQ09OVEVOVCBHT0VTIElOIEhFUkVcbiAgICAgICAgICAgICAgICAgICAgVGhpcyBlbGVtZW50IGlzIHRoZSBob29rIGludG8gd2hpY2ggeW91ciBjdXN0b20gcXVlc3Rpb24ncyBVSSBzaG91bGQgYmUgcmVuZGVyZWQuXG4gICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIiR7UFJFRklYfS1jaGVja0Fuc3dlci13cmFwcGVyXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIiR7UFJFRklYfS1zdWdnZXN0ZWRBbnN3ZXJzLXdyYXBwZXJcIj48L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuXG4gICAgICAgIC8vIE9wdGlvbmFsIC0gUmVuZGVyIG9wdGlvbmFsIExlYXJub3NpdHkgY29tcG9uZW50cyBsaWtlIENoZWNrIEFuc3dlciBCdXR0b24sIFN1Z2dlc3RlZCBBbnN3ZXJzIExpc3RcbiAgICAgICAgLy8gZmlyc3QgYmVmb3JlIHJlbmRlcmluZyB5b3VyIHF1ZXN0aW9uJ3MgY29tcG9uZW50c1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgbHJuVXRpbHMucmVuZGVyQ29tcG9uZW50KCdTdWdnZXN0ZWRBbnN3ZXJzTGlzdCcsIGVsLnF1ZXJ5U2VsZWN0b3IoYC4ke1BSRUZJWH0tc3VnZ2VzdGVkQW5zd2Vycy13cmFwcGVyYCkpLFxuICAgICAgICAgICAgbHJuVXRpbHMucmVuZGVyQ29tcG9uZW50KCdDaGVja0Fuc3dlckJ1dHRvbicsIGVsLnF1ZXJ5U2VsZWN0b3IoYC4ke1BSRUZJWH0tY2hlY2tBbnN3ZXItd3JhcHBlcmApKVxuICAgICAgICBdKS50aGVuKChbc3VnZ2VzdGVkQW5zd2Vyc0xpc3RdKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnN1Z2dlc3RlZEFuc3dlcnNMaXN0ID0gc3VnZ2VzdGVkQW5zd2Vyc0xpc3Q7XG5cbiAgICAgICAgICAgIC8vIFRPRE8gLSBSZXF1aXJlcyBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgICAgLyoqICBUaGUgbG9naWMgdG8gcmVuZGVyIHRoZSBVSSBvZiB5b3VyIGN1c3RvbSBxdWVzdGlvbiBzaG91bGQgZ28gaGVyZS4gXG4gICAgICAgICAgICAgKiBcbiAgICAgICAgICAgICAqIEZvciBleGFtcGxlIHRoaXMgbWlnaHQgYmUgYSBjYWxsIHRvIGEgZnVuY3Rpb24gb3IgaW5zdGFudGlhdGlvbiBvZiBhIGNsYXNzIHRvIHJlbmRlciB5b3VyIFVJIGNvbXBvbmVudChzKS5cbiAgICAgICAgICAgICAqIFxuICAgICAgICAgICAgICovIFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgcHVibGljIG1ldGhvZHMgdG8gdGhlIGNyZWF0ZWQgcXVlc3Rpb24gaW5zdGFuY2UgdGhhdCBpcyBhY2Nlc3NpYmxlIGR1cmluZyBydW50aW1lXG4gICAgICpcbiAgICAgKiBFeGFtcGxlOiBxdWVzdGlvbnNBcHAucXVlc3Rpb24oJ215LWN1c3RvbS1xdWVzdGlvbi1yZXNwb25zZS1pZCcpLm15TmV3TWV0aG9kKCk7XG4gICAgICogXG4gICAgICovXG4gICAgcmVnaXN0ZXJQdWJsaWNNZXRob2RzKCkge1xuICAgICAgICBjb25zdCB7IGluaXQgfSA9IHRoaXM7XG4gICAgICAgIC8vIEF0dGFjaCB0aGUgbWV0aG9kcyB5b3Ugd2FudCBvbiB0aGlzIG9iamVjdFxuICAgICAgICBjb25zdCBmYWNhZGUgPSBpbml0LmdldEZhY2FkZSgpO1xuXG4gICAgICAgIGZhY2FkZS5kaXNhYmxlID0gKCkgPT4ge1xuICAgICAgICAgICAgLy8gVE9ETzogUmVxdWlyZXMgaW1wbGVtZW50YXRpb25cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogVGhlIHB1cnBvc2Ugb2YgdGhpcyBtZXRob2QgaXMgdG8gcHJldmVudCBsZWFybmVyIGludGVyYWN0aW9uIHdpdGggeW91ciBxdWVzdGlvbidzIFVJLlxuICAgICAgICAgICAgICogXG4gICAgICAgICAgICAgKiBJZiB5b3UgcGxhbiB0byBkaXNwbGF5IHlvdXIgY3VzdG9tIHF1ZXN0aW9uIGluIFwicmV2aWV3XCIgc3RhdGUsIHRoZW4geW91IG5lZWQgdG8gaW1wbGVtZW50IHRoaXNcbiAgICAgICAgICAgICAqIG1ldGhvZCB0byBwcmV2ZW50IGEgbGVhcm5lciBvciBpbnN0cnVjdG9yIHdobyBpcyByZXZpZXdpbmcgdGhlaXIgY29tcGxldGVkIHJlc3VsdHMgZnJvbSBiZWluZyBhYmxlIHRvIGNoYW5nZSB0aGUgcmVzcG9uc2VzIGluIHlvdXIgcXVlc3Rpb24gVUkuXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLy8gRVhBTVBMRSBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LWlucHV0Jykuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpXG5cbiAgICAgICAgfTtcbiAgICAgICAgZmFjYWRlLmVuYWJsZSA9ICgpID0+IHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogVGhlIHB1cnBvc2Ugb2YgdGhpcyBtZXRob2QgaXMgdG8gcmUtZW5hYmxlIGxlYXJuZXIgaW50ZXJhY3Rpb24gd2l0aCB5b3VyIHF1ZXN0aW9uJ3MgVUlcbiAgICAgICAgICAgICAqIGFmdGVyIGl0IGhhcyBiZWVuIHByZXZpb3VzbHkgZGlzYWJsZWQuXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICogKEZvciBleGFtcGxlLCB5b3UgcGxhbiB0byB0ZW1wb3JhcmlseSBkaXNhYmxlIHRoZSBxdWVzdGlvbiBVSSBmb3IgYSBzdHVkZW50IHRha2luZyB0aGUgYXNzZXNzbWVudCB1bnRpbCB0aGV5IGNvbXBsZXRlIGFub3RoZXIgdGFzayBsaWtlIHNwZW5kIGEgc2V0IHRpbWUgcmVhZGluZyB0aGUgaW5zdHJ1Y3Rpb25zLilcbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvLyBFWEFNUExFIGltcGxlbWVudGF0aW9uXG4gICAgICAgICAgICAvLyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXktaW5wdXQnKS5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJylcbiAgICAgICAgfTtcbiAgICAgICAgZmFjYWRlLnJlc2V0UmVzcG9uc2UgPSAoKSA9PiB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBwdXJwb3NlIG9mIHRoaXMgbWV0aG9kIGlzIHRvIHN1cHBvcnQgcmVtb3ZhbCBvZiBhIHByZXZpb3VzbHkgZW50ZXJlZCByZXNwb25zZSB0byB5b3VyIGN1c3RvbSBxdWVzdGlvblxuICAgICAgICAgICAgICogYW5kIHJlc3RvcmluZyB0aGUgcXVlc3Rpb24gdG8gaXRzIGluaXRpYWwgYmxhbmsgc3RhdGUgYmVmb3JlIGEgcmVzcG9uc2Ugd2FzIGVudGVyZWQuXG4gICAgICAgICAgICAgKiAoRm9yIGV4YW1wbGUsIGluIGEgbXVsdGlwbGUgY2hvaWNlIHF1ZXN0aW9uIHdoZXJlIGEgc3R1ZGVudCBoYXMgcGlja2VkIGEgY2hvaWNlLCB5b3UgcmVzZXQgdGhlIHF1ZXN0aW9uIHNvIHRoYXQgbm8gY2hvaWNlcyBhcmUgcGlja2VkIGF0IGFsbC4pXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLy8gVE9ETzogUmVxdWlyZXMgaW1wbGVtZW50YXRpb24sIHlvdSBjb3VsZCB1c2UgdGhlIGZvbGxvd2luZyBzdGVwc1xuXG4gICAgICAgICAgICAvLyB0cmlnZ2VyIGEgJ3Jlc2V0UmVzcG9uc2UnIGV2ZW50IHRvIHJlc2V0IHRoZSB2YWx1ZSBvZiByZXNwb25zZVxuICAgICAgICAgICAgLy8gdGhpcy5ldmVudHMudHJpZ2dlcigncmVzZXRSZXNwb25zZScpO1xuXG4gICAgICAgICAgICAvLyByZXNldCBvdGhlciBzdGF0ZXMgaWYgeW91IG5lZWRcblxuICAgICAgICAgICAgLy8gcmUtcmVuZGVyIHRoZSBjb21wb25lbnQsIG1hbmFnZSB0aGUgJ3Jlc2V0JyBzdGF0ZSBieSB5b3Vyc2VsZlxuICAgICAgICB9O1xuICAgICAgICBmYWNhZGUuc2hvd1ZhbGlkYXRpb25VSSA9ICgpID0+IHtcbiAgICAgICAgICAgIC8vIFRPRE86IHJlcXVpcmVzIGltcGxlbWVudGF0aW9uXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBwdXJwb3NlIG9mIHRoaXMgbWV0aG9kIGlzIHRvIHVwZGF0ZSB5b3VyIGN1c3RvbSBxdWVzdGlvbidzIFVJIHdpdGggdmlzdWFsIGZlZWRiYWNrIFxuICAgICAgICAgICAgICogYWZ0ZXIgdGhlIGxlYXJuZXIgcHJlc3NlcyB0aGUgQ2hlY2sgQW5zd2VyIGJ1dHRvbi5cbiAgICAgICAgICAgICAqIFxuICAgICAgICAgICAgICogVGhlIGZvbGxvd2luZyBpcyBhbiBleGFtcGxlIGltcGxlbWVudGF0aW9uIHRoYXQgc2hvd3MgdGhlIHN0YW5kYXJkIExlYXJub3NpdHkgXCJjaGVja21hcmsgLyB0aWNrXCIgZm9yIGEgY29ycmVjdCBhbnN3ZXJcbiAgICAgICAgICAgICAqIG9yIHRoZSBzdGFuZGFyZCBMZWFybm9zaXR5IFwieCBtYXJrIC8gY3Jvc3NcIiBmb3IgYW4gaW5jb3JyZWN0IGFuc3dlci4gXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gRVhBTVBMRSBpbXBsZW1ldGF0aW9uOlxuXG4gICAgICAgICAgICAvLyBjb25zdCBhbnN3ZXJJc0NvcnJlY3QgPSBmYWNhZGUuaXNWYWxpZCgpO1xuICAgICAgICAgICAgLy8gLyoqXG4gICAgICAgICAgICAvLyAgKiB1cGRhdGUgdGhlIFVJIGJhc2VkIG9uIHRoZSByZXN1bHRcbiAgICAgICAgICAgIC8vICAqIElNUE9SVEFOVDogSW4gYm90aCBjYXNlcyB3ZSBuZWVkIHRvIHRhcmdldCB0aGUgZWxlbWVudCB3aXRoIHRoZSBjbGFzc25hbWUgbHJuX3Jlc3BvbnNlX2lucHV0XG4gICAgICAgICAgICAvLyAgKi9cbiAgICAgICAgICAgIC8vIGlmIChhbnN3ZXJJc0NvcnJlY3QpIHtcbiAgICAgICAgICAgIC8vICAgICAvKiogaWYgdGhlIGFuc3dlciBpcyBjb3JyZWN0IHdlIHdpbGwgYWRkIHRoZSBMZWFybm9zaXR5IHV0aWxpdHkgY2xhc3MgbHJuX2NvcnJlY3QsIHdoaWNoIHdpbGwgYXV0b21hdGljYWxseSBzaG93IHRoZSBMZWFybm9zaXR5XG4gICAgICAgICAgICAvLyAgICAgICogY2hlY2ttYXJrICh0aWNrKSB5b3UgYXJlIHVzZWQgdG8gb24gcmVndWxhciBMZWFybm9zaXR5IHF1ZXNpdG9uIHR5cGVzXG4gICAgICAgICAgICAvLyAgICAgICovXG4gICAgICAgICAgICAvLyAgICAgZWwucXVlcnlTZWxlY3RvcihcIi5scm5fcmVzcG9uc2VfaW5wdXRcIikuY2xhc3NMaXN0LmFkZChcImxybl9jb3JyZWN0XCIpO1xuICAgICAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgICAgIC8vICAgICAvKiogaWYgdGhlIGFuc3dlciBpcyBpbmNvcnJlY3Qgd2Ugd2lsbCBhZGQgdGhlIExlYXJub3NpdHkgdXRpbGl0eSBjbGFzcyBscm5faW5jb3JyZWN0LCB3aGljaCB3aWxsIGF1dG9tYXRpY2FsbHkgc2hvdyB0aGUgTGVhcm5vc2l0eVxuICAgICAgICAgICAgLy8gICAgICAqIHggKGNyb3NzKSB5b3UgYXJlIHVzZWQgdG8gb24gcmVndWxhciBMZWFybm9zaXR5IHF1ZXNpdG9uIHR5cGVzXG4gICAgICAgICAgICAvLyAgICAgICovXG4gICAgICAgICAgICAvLyAgICAgZWwucXVlcnlTZWxlY3RvcihcIi5scm5fcmVzcG9uc2VfaW5wdXRcIikuY2xhc3NMaXN0LmFkZChcImxybl9pbmNvcnJlY3RcIik7XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICB9O1xuICAgICAgICBmYWNhZGUucmVzZXRWYWxpZGF0aW9uVUkgPSAoKSA9PiB7XG4gICAgICAgICAgICAvLyBUT0RPOiByZXF1aXJlcyBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBJZiB5b3UgaW1wbGVtZW50IHNob3dWYWxpZGF0aW9uVUkoKSBhYm92ZSwgdGhlbiB5b3UgbmVlZCB0byBpbXBsZW1lbnQgdGhpcyBtZXRob2QgYWxzby5cbiAgICAgICAgICAgICAqIFxuICAgICAgICAgICAgICogSWYgdGhlIHVzZXIgZW50ZXJzIGEgcmVzcG9uc2UgdG8geW91ciBjdXN0b20gcXVlc3Rpb24sIHByZXNzZXMgdGhlIENoZWNrIEFuc3dlciBidXR0b24sIGFuZCB0aGVuIGNoYW5nZXMgdGhlaXIgcmVzcG9uc2UgdG8gc29tZXRoaW5nIG5ldyxcbiAgICAgICAgICAgICAqIHlvdSBub3cgbmVlZCB0byByZW1vdmUgdGhlIGZlZWRiYWNrIFVJIHRoYXQgeW91IGhhZCBkaXNwbGF5ZWQgZm9yIHRoZSBwcmV2aW91cyByZXNwb25zZS4gVGhpcyBpcyBleGFjdGx5IHRoZSBwdXJwb3NlIG9mIHRoaXMgbWV0aG9kLlxuICAgICAgICAgICAgICogXG4gICAgICAgICAgICAgKiBUaGUgZm9sbG93aW5nIGlzIGFuIGV4YW1wbGUgaW1wbGVtZW50YXRpb24gdGhhdCByZW1vdmVzIHRoZSBzdGFuZGFyZCBMZWFybm9zaXR5IHZhbGlkYXRpb24gVUkgKFwiY2hlY2ttYXJrIC8gdGlja1wiIGlmIHRoZSBwcmV2aW91cyByZXNwb25zZSB3YXMgY29ycmVjdFxuICAgICAgICAgICAgICogb3IgXCJ4IG1hcmsgLyBjcm9zc1wiIGlmIHRoZSBwcmV2aW91cyByZXNwb25zZSB3YXMgaW5jb3JyZWN0KS5cbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvLyBFeGFtcGxlIGltcGxlbWVudGF0aW9uOlxuXG4gICAgICAgICAgICAvLyAvLyB3ZSB3aWxsIHJlbW92ZSB0aGUgTGVhcm5vc2l0eSBjaGVja21hcmsgb3IgeCBwcmV2aW91c2x5IHNob3dpbmdcbiAgICAgICAgICAgIC8vIGVsLnF1ZXJ5U2VsZWN0b3IoXCIubHJuX3Jlc3BvbnNlX2lucHV0XCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJscm5fY29ycmVjdFwiKTtcbiAgICAgICAgICAgIC8vIGVsLnF1ZXJ5U2VsZWN0b3IoXCIubHJuX3Jlc3BvbnNlX2lucHV0XCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJscm5faW5jb3JyZWN0XCIpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyAvLyBpZiB3ZSBjaG9zZSB0byBhbHNvIGRpc3BsYXkgdGhlIGNvcnJlY3QgYW5zd2VyLCB3ZSB3aWxsIG5vdyByZW1vdmUgdGhlIGRpc3BsYXkgb2YgdGhlIGNvcnJlY3QgYW5zd2VyIGFzIHdlbGwgYnkgXG4gICAgICAgICAgICAvLyAvLyBsZXZlcmFnaW5nIHRoZSBzdWdnZXN0ZWRBbnN3ZXJzTGlzdC5yZXNldCgpIG1ldGhvZC5cbiAgICAgICAgICAgIC8vIHRoaXMuc3VnZ2VzdGVkQW5zd2Vyc0xpc3QucmVzZXQoKVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGhhbmRsZUV2ZW50cygpIHtcbiAgICAgICAgY29uc3QgeyBldmVudHMsIGluaXQgfSA9IHRoaXM7XG4gICAgICAgIGNvbnN0IGZhY2FkZSA9IGluaXQuZ2V0RmFjYWRlKClcblxuICAgICAgICAvLyBUT0RPOiBSZXF1aXJlcyBpbXBsZW1lbnRhdGlvbiAtIE1ha2Ugc3VyZSB5b3UgdHJpZ2dlciAnY2hhbmdlZCcgZXZlbnQgYWZ0ZXIgdGhlIHVzZXIgY2hhbmdlcyB0aGVpciByZXNwb25zZXMgdG8geW91ciBjdXN0b20gcXVlc2l0b246XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFxuICAgICAgICAgKiBXaGVuIHlvdSBjb25zaWRlciB0aGF0IHRoZSByZXNwb25zZSB0byB5b3VyIHF1ZXN0aW9uIGhhcyBiZWVuIGNoYW5nZWQsIFxuICAgICAgICAgKiAoc3VjaCB3aGVuIGEgdXNlciBjbGlja3MgdGhlIGNob2ljZSBvZiBhIG11bHRpcGxlIGNob2ljZSBxdWVzdGlvbiBvciBlbnRlcnMgdGV4dCBpbnRvIGEgZnJlZSByZXNwb25zZSBxdWVzdGlvbiksXG4gICAgICAgICAqIHRoZW4geW91IG11c3QgdHJpZ2dlciB0aGUgY2hhbmdlZCBldmVudCB0byBpbmZvcm0gUXVlc3Rpb25zIEFQSSB0aGF0IHRoZSBxdWVzdGlvbiBoYXMgYmVlbiBhdHRlbXB0ZWQuXG4gICAgICAgICAqIFxuICAgICAgICAgKiBUbyBkbyB0aGlzLCB5b3UgbXVzdCBjYWxsIGV2ZW50cy50cmlnZ2VyKCdjaGFuZ2VkJywgcmVzcG9uc2VzKTsgIFxuICAgICAgICAgKiBUaGlzIGNhbGwgc2hvdWxkIHRha2UgcGxhY2UgaW5zaWRlIG9mIGEgRE9NIGV2ZW50IGxpc3RlbmVyIGluIHdoaWNoIHRoZSB1c2VyIGhhcyBjaGFuZ2VkIHRoZWlyIHJlc3BvbnNlIHRvIHlvdXIgcXVlc3Rpb25cbiAgICAgICAgICogKHN1Y2ggYXMgYSAnY2xpY2snIGV2ZW50IGxpc3RlbmVyIGZvciBhIG11bHRpcGxlIGNob2ljZSBxdWVzdGlvbiwgb3IgYW4gaW5wdXQgJ2NoYW5nZScgZXZlbnQgbGlzdGVuZXIgZm9yIGEgZnJlZSByZXNwb25zZSB0ZXh0IHF1ZXN0aW9uKVxuICAgICAgICAgKiBcbiAgICAgICAgICogQHBhcmFtIHJlc3BvbnNlcyBUaGUgJ3Jlc3BvbnNlcycgdmFyaWFibGUgY2FuIGJlIGFueSBkYXRhIHR5cGUgeW91IHdvdWxkIGxpa2UgaXQgdG8gYmUgZGVwZW5kaW5nIG9uIHRoZSBmb3JtYXQgb2YgeW91ciBjdXN0b20gcXVlc3Rpb24ncyByZXNwb25zZXMuIFxuICAgICAgICAgKiBGb3IgaW5zdGFuY2UsIGl0IG1pZ2h0IGJlIGEgc3RyaW5nIGZvciB0aGUgdmFsdWUgb2YgYSBzaW1wbGUgdGV4dCBpbnB1dFxuICAgICAgICAgKiBPciBmb3IgYSBxdWVzaXRvbiBhc2tpbmcgYSBzdHVkZW50IHRvIHBsb3QgY29vcmluYXRlcyBvbiBhIGdyYXBoLCBpdCBtaWdodCBiZSBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgeCBhbmQgeSBjb29yZGluYXRlcywgZS5nLlxuICAgICAgICAgKiAgICAge1xuICAgICAgICAgKiAgICAgICB4OiAxMjMsXG4gICAgICAgICAqICAgICAgIHk6IDQwOFxuICAgICAgICAgKiAgICAgfVxuICAgICAgICAgKi9cblxuICAgICAgICAvKiogRVhBTVBMRSBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgKiBcbiAgICAgICAgICogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LXJhZGlvLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAqICAgXG4gICAgICAgICAqICAvLyBTVEVQIDE6IHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHlvdXIgY3VzdG9tIHF1ZXN0aW9uJ3MgaW5wdXQsIHNhdmUgaXRzIGN1cnJlbnQgdmFsdWUgYXMgdGhlIHZhbHVlIG9mIHJlc3BvbnNlc1xuICAgICAgICAgKiAgbGV0IHJlc3BvbnNlcyA9IGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgKiAgIFxuICAgICAgICAgKiAgLy8gU1RFUCAyOiBcbiAgICAgICAgICogIC8vIG5vdyBub3RmeSBRdWVzdGlvbnMgQVBJIHRoYXQgdGhlIHVzZXIgaGFzIGNoYW5nZWQgdGhlaXIgcmVzcG9uc2VcbiAgICAgICAgICogICBcbiAgICAgICAgICogICBldmVudHMudHJpZ2dlcignY2hhbmdlZCcsIHJlc3BvbnNlcyk7XG4gICAgICAgICAqIFxuICAgICAgICAgKiAgLy8gU1RFUCAzIC0gT1BUSU9OQUxcbiAgICAgICAgICogIC8vIElmIHlvdSBoYXZlIGNob3NlbiB0byBpbXBsZW1lbnQgZmFjYWRlLnNob3dWYWxpZGF0aW9uVUkoKSBhYm92ZSB0byBkaXNwbGF5IHZpc2l1YWwgZmVlZGJhY2sgZm9yIGEgY29ycmVjdCAvIGluY29ycmVjdCBhbnN3ZXJcbiAgICAgICAgICogICAgIHdoZW4gdGhlIHVzZXIgcHJlc3NlcyBcIkNoZWNrIEFuc3dlclwiIGZvciB0aGUgY3VycmVudCByZXNwb25zZTpcbiAgICAgICAgICogICAgIHRoZW4gbWFrZSBzdXJlIHlvdSBoYXZlIGFsc28gaW1wbGVtZW50ZWQgZmFjYWRlLnJlc2V0VmFsaWRhdGlvblVJKCksIGFuZCB0aGF0IHlvdSBjYWxsIGl0IGhlcmU6XG4gICAgICAgICAqIFxuICAgICAgICAgKiAvLyBmYWNhZGUucmVzZXRWYWxpZGF0aW9uVUkoKVxuICAgICAgICAgKiBcbiAgICAgICAgICogfSlcbiAgICAgICAgICogXG4gICAgICAgICAqL1xuXG4gICAgICAgICAgICAgXG5cblxuICAgICAgICAvLyBcInZhbGlkYXRlXCIgZXZlbnQgY2FuIGJlIHRyaWdnZXJlZCB3aGVuIENoZWNrIEFuc3dlciBidXR0b24gaXMgY2xpY2tlZCBvciB3aGVuIHB1YmxpYyBtZXRob2QgLnZhbGlkYXRlKCkgaXMgY2FsbGVkXG4gICAgICAgIC8vIHNvIGRldmVsb3BlciBuZWVkcyB0byBsaXN0ZW4gdG8gdGhpcyBldmVudCB0byBkZWNpZGUgaWYgaGUgd2FudHMgdG8gZGlzcGxheSB0aGUgY29ycmVjdCBhbnN3ZXJzIHRvIHVzZXIgb3Igbm90XG4gICAgICAgIC8vIG9wdGlvbnMuc2hvd0NvcnJlY3RBbnN3ZXJzIHdpbGwgdGVsbCBpZiBjb3JyZWN0IGFuc3dlcnMgZm9yIHRoaXMgcXVlc3Rpb24gc2hvdWxkIGJlIGRpc3BsYXkgb3Igbm90LlxuICAgICAgICAvLyBUaGUgdmFsdWUgc2hvd0NvcnJlY3RBbnN3ZXJzIGJ5IGRlZmF1bHQgaXMgdGhlIHZhbHVlIG9mIHNob3dDb3JyZWN0QW5zd2VycyBpbnNpZGUgaW5pdE9wdGlvbnMgb2JqZWN0IHRoYXQgaXMgdXNlZFxuICAgICAgICAvLyB0byBpbml0aWFsaXplIHF1ZXN0aW9uIGFwcCBvciB0aGUgdmFsdWUgb2YgdGhlIG9wdGlvbnMgdGhhdCBpcyBwYXNzZWQgaW50byBwdWJsaWMgbWV0aG9kIHZhbGlkYXRlIChsaWtlIHF1ZXN0aW9uLnZhbGlkYXRlKHtzaG93Q29ycmVjdEFuc3dlcnM6IGZhbHNlfSkpXG4gICAgICAgIGV2ZW50cy5vbigndmFsaWRhdGUnLCBvcHRpb25zID0+IHtcbiAgICAgICAgICAgIC8vIE9QVElPTkFMIFN0ZXAgMTogXG4gICAgICAgICAgICAvL0lmIHlvdSB3YW50IHRvIHNob3cgY2hhbmdlcyB0byB0aGUgVUkgZm9yIGEgY29ycmVjdCBvciBpbmNvcnJlY3QgYW5zd2VyIHdoZW4gdGhlIGxlYXJuZXIgcHJlc3NlcyBjaGVjayBhbnN3ZXJcbiAgICAgICAgICAgIC8vIHRoZW4gbWFrZSBzdXJlIHlvdSBoYXZlIGFsc28gaW1wbGVtZW50ZWQgZmFjYWRlLnNob3dWYWxpZGF0aW9uVUkoKSwgYW5kIHRoYXQgeW91IGNhbGwgaXQgaGVyZTpcbiAgICAgICAgICAgIGZhY2FkZS5zaG93VmFsaWRhdGlvblVJKClcblxuICAgICAgICAgICAgLy8gT1BUSU9OQUwgU3RlcCAyOiBcbiAgICAgICAgICAgIC8vIElmIHlvdSB3YW50IHRvIGRpc3BsYXkgdGhlIGNvcnJlY3QgYW5zd2VyIHRvIHRoZSBsZWFybmVyIHdoZW4gdGhleSBwcmVzcyB0aGUgQ2hlY2sgQW5zd2VyIGJ1dHRvbixcbiAgICAgICAgICAgIC8vIHRoZW4geW91IHNob3VsZCBsZXZlcmFnZSB0aGUgc3VnZ2VzdGVkQW5zd2Vyc0xpc3Quc2V0QW5zd2VycygpIG1ldGhvZC4gUGxlYXNlIHNlZSB0aGUgZXhhbXBsZSBpbXBsZW1lbnRhdGlvbiBiZWxvdyBmb3IgZnVsbCBkZXRhaWxzLlxuXG4gICAgICAgICAgICAvLyBFWEFNUExFIEltcGxlbWVudGF0aW9uIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBpZiAoIWZhY2FkZS5pc1ZhbGlkKCkgJiYgb3B0aW9ucy5zaG93Q29ycmVjdEFuc3dlcnMpIHtcbiAgICAgICAgICAgIC8vICAgICAvLyBwYXNzIGEgc3RyaW5nIGlmIHRoZXJlIGlzIGEgc2luZ2xlIGNvcnJlY3QgYW5zd2VyIFxuICAgICAgICAgICAgLy8gICAgIC8vT1I6XG4gICAgICAgICAgICAvLyAgICAgLyoqXG4gICAgICAgICAgICAvLyAgICAgKiBGb3IgY3VzdG9tIHF1ZXN0aW9ucyB3aXRoIG11bHRpcGxlIGNvcnJlY3QgYW5zd2VycywgeW91IGNhbiBhbHNvIHBhc3MgYW4gYXJyYXkgb2Ygb2JqZWN0cyBpbnRvIHRoaXMgbWV0aG9kLCBcbiAgICAgICAgICAgIC8vICAgICAqIGVhY2ggb2JqZWN0IGNvbnRhaW5pbmcgYW4gaW5kZXgga2V5IG9mIHR5cGUgbnVtYmVyIGZvciB0aGUgMC1iYXNlZCBpbmRleCBvZiB0aGUgY29ycmVjdCBhbnN3ZXIsIFxuICAgICAgICAgICAgLy8gICAgICogYW5kIGEgbGFiZWwga2V5IG9mIHR5cGUgc3RyaW5nIGZvciB0aGUgdGV4dCBvZiB0aGUgY29ycmVjdCBhbnN3ZXIuIFxuICAgICAgICAgICAgLy8gICAgICogU28sIGZvciBhIGh5cG90aGV0aWNhbCBxdWVzdGlvbiB3aXRoIDMgY29ycmVjdCBhbnN3ZXJzLCB5b3UgbWlnaHQgcGFzcyB0aGUgZm9sbG93aW5nIGFycmF5IGludG8gc2V0QW5zd2VycygpOlxuXG4gICAgICAgICAgICAvLyAgICAgICAgIFtcbiAgICAgICAgICAgIC8vICAgICAgICAgIHtpbmRleDogMCwgbGFiZWw6IFwiY29ycmVjdCBhbnN3ZXIgMVwifSxcbiAgICAgICAgICAgIC8vICAgICAgICAgIHtpbmRleDogMSwgbGFiZWw6IFwiY29ycmVjdCBhbnN3ZXIgMlwifSxcbiAgICAgICAgICAgIC8vICAgICAgICAgIHtpbmRleDogMiwgbGFiZWw6IFwiY29ycmVjdCBhbnN3ZXIgM1wifVxuICAgICAgICAgICAgLy8gICAgICAgICBdXG5cbiAgICAgICAgICAgIC8vICAgICAgKi9cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC8vICAgICAvLyBFWEFNUExFIEltcGxlbWVudGF0aW9uIGZvciBhIGNvcnJlY3QgYW5zd2VyIHRoYXQgaXMgYSBzdHJpbmc6XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyAgICAgLy8gdGhpcy5zdWdnZXN0ZWRBbnN3ZXJzTGlzdC5zZXRBbnN3ZXJzKHRoaXMucXVlc3Rpb24udmFsaWRfcmVzcG9uc2UpO1xuICAgICAgICAgICAgLy8gfVxuXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJQUkVGSVgiLCJRdWVzdGlvbiIsImluaXQiLCJscm5VdGlscyIsImV2ZW50cyIsImVsIiwiJGVsIiwiZ2V0IiwicmVuZGVyIiwidGhlbiIsInJlZ2lzdGVyUHVibGljTWV0aG9kcyIsImhhbmRsZUV2ZW50cyIsInN0YXRlIiwiZ2V0RmFjYWRlIiwiZGlzYWJsZSIsInRyaWdnZXIiLCJxdWVzdGlvbiIsInJlc3BvbnNlIiwiaW5uZXJIVE1MIiwiUHJvbWlzZSIsImFsbCIsInJlbmRlckNvbXBvbmVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzdWdnZXN0ZWRBbnN3ZXJzTGlzdCIsImZhY2FkZSIsImVuYWJsZSIsInJlc2V0UmVzcG9uc2UiLCJzaG93VmFsaWRhdGlvblVJIiwicmVzZXRWYWxpZGF0aW9uVUkiLCJvbiIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./question/index.js\n");

/***/ }),

/***/ "../scss/main.scss":
/*!*************************!*\
  !*** ../scss/main.scss ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc2Nzcy9tYWluLnNjc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3Njc3MvbWFpbi5zY3NzP2U1MTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../scss/main.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./question.js");
/******/ 	
/******/ })()
;